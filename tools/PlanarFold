#!/home/xiangl/miniconda3/envs/my_python3.9/bin/python
import os
import sys
import numpy as np
import dsflyext as ext
from scipy.io import netcdf_file
from base import partition, dot2bps, System
import argparse

#====== Main ==================================================================
#parser = argparse.ArgumentParser(description="PlanarFold.v1 2025")
parser = argparse.ArgumentParser(description='='*60+"\n  PlanarFold.v1 (2025):\n\tA coarse-grained molecular dynamics model\n\tof RNA in two-dimensional space\n"+'='*60, formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument('-i', default='controls.in', type=str, help='Control parameter file; default = ''controls.in''\n\n', metavar='')
parser.add_argument('-f', default='fparm.in', type=str, help='Force parameter file; default = ''fparm.in''\n\n', metavar='')
parser.add_argument('-p', default='ssRNA.prmtop', type=str, help='Topology file; default = ''ssRNA.prmtop''\n\n', metavar='')
parser.add_argument('-c', default='ssRNA.inpcrd', type=str, help='Coordinate file; default = ''ssRNA.inpcrd''\n\n', metavar='')
parser.add_argument('-o', default='run.out', type=str, help='Energy output file; default = ''run.out''\n\n', metavar='')
parser.add_argument('-x', default='run.nc', type=str, help='Trajectory file; default = ''run.nc''\n\n', metavar='')
parser.add_argument('-r', default='run.rst', type=str, help='Restart file; default = ''run.rst''\n\n', metavar='')
#parser.add_argument('-c', default='ssRNA.rst', type=str, help='Coordinate file; default = ''ssRNA.rst''\n', metavar='')
parser.add_argument('-ntr', default='restraint_ntr.in', type=str, help='Restraint file; default = ''restraint_ntr.in''\n\n', metavar='')
parser.add_argument('-dpr', default='restraint_dpr.in', type=str, help='Confinement file; default = ''restraint_dpr.in''\n\n', metavar='')

# read the filenames
args = parser.parse_args()
fninp = args.i
fnprm = args.f
fntop = args.p
fncrd = args.c
fnout = args.o
fntrj = args.x
fnrst = args.r
fnntr = args.ntr
fndpr = args.dpr
#------------------------------------
print('Reading files ...')
md = System(fntop, fncrd, fninp, fnprm, fnntr, fndpr, fnout, fntrj, fnrst)
print('Done')
#------------------------------------
print('Performing MD ...')
md.run()
print('Done')


